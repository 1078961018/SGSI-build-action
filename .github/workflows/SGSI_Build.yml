# This is a basic workflow to help you get started with Actions

name: SGSI_Build

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'Url link'
        required: true
        default: 'https://dl.google.com/developers/android/sc/images/ota/redfin-ota-spp2.210219.008-3d61e529.zip'
      FIRMWARE_NAME:
        description: 'Firmware name'
        required: true
        default: 'update.zip'
      OS_TYPE:
        description: 'ROM OS type'
        required: true
        default: 'Generic'
      BUILD_TYPE:
        description: 'ROM build type: ab or a'
        required: true
        default: 'ab'        
      REPACK_NAME:
        description: 'ROM repackage name'
        required: true
        default: 'SGSI.zip'

env:
  VERSION: '12'
  upload_action-gh-release: 'true'
  SETUP: 'true'
  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
       - name: Checkout
         uses: actions/checkout@main
       
       - name: Clean Up
         run: |       
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean
           df -h
           
       - name: Setting up the SPICES
         run: |
            sudo apt-get install -y git wget git zip unzip curl axel

       - name: Cloning...
         run: |
             git clone --recurse-submodules https://github.com/xiaoxindada/SGSI-build-tool.git -b 12 $GITHUB_WORKSPACE/SGSI-build-tool
           
       - name: Download zip...
         run: |
            cd $GITHUB_WORKSPACE/SGSI-build-tool
            mkdir ./tmp
            wget -U "Mozilla/5.0" ${{ github.event.inputs.ROM_URL }} -O "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/${{ github.event.inputs.FIRMWARE_NAME }}"
            echo "zip_file: $(ls "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/")"
            
       - name: Setup Tool Utils...
         if: ${{ env.SETUP == 'true' }}
         run: |
            sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
            # sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
            java -version
            
       - name: Building AB DEVICES SGSI...
         if: ${{ github.event.inputs.BUILD_TYPE == 'AB' }} || ${{ github.event.inputs.BUILD_TYPE == 'ab' }}
         run: |
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --AB ${{ github.event.inputs.OS_TYPE }} ${{ github.event.inputs.FIRMWARE_NAME }} --fix-bug

       - name: Building A-only DEVICES SGSI...
         if: ${{ github.event.inputs.BUILD_TYPE == 'aonly' }} || ${{ github.event.inputs.BUILD_TYPE == 'AONLY' }}
         run: |
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --a-only ${{ github.event.inputs.OS_TYPE }} ${{ github.event.inputs.FIRMWARE_NAME }} --fix-bug     

       - name: Repack output file ...
         run: |            
             cd $GITHUB_WORKSPACE/SGSI-build-tool
             pwd
             mkdir -p upload
             zip -r ${{ github.event.inputs.REPACK_NAME }} ./SGSI/*
             if [[ $(du -sb "${{ github.event.inputs.REPACK_NAME }}" | awk '{print $1}') -gt 2097152000 ]];then
                 echo -e "split packaging..."
                 tar -cpzf - "${{ github.event.inputs.REPACK_NAME }}" | split -d -b 1024m - "upload/${{ github.event.inputs.REPACK_NAME }}"
             else
                 mv ${{ github.event.inputs.REPACK_NAME }} upload/${{ github.event.inputs.REPACK_NAME }}
             fi
             ls "upload"

       - name: Upload SGSI to action-gh-release...
         if: env.upload_action-gh-release == 'true'
         uses: ncipollo/release-action@v1.8.6
         with:
           artifacts: ${{ github.workspace }}/SGSI-build-tool/upload/*
           name: xiaoxinSGSI-${{ github.event.inputs.OS_TYPE }}-${{ github.event.inputs.BUILD_TYPE }}-Android${{ env.VERSION }}-unpack
           tag: xiaoxinSGSI-${{ github.event.inputs.OS_TYPE }}-${{ github.event.inputs.BUILD_TYPE }}-Android${{ env.VERSION }}-${{ github.run_number }}
           bodyFile: "${{ github.workspace }}/SGSI-build-tool/SGSI/build_info.txt"
           token: ${{ secrets.GITHUB_TOKEN }}
